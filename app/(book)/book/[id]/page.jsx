import Book from "../../../../components/BookIdPage/BookIdPage";
import { apiClient } from "../../../../Utils/axios";

export async function generateMetadata({ searchParams }) {
  const bookName = (await searchParams).title
  return {
    title: `IBook | كتاب ${bookName}`,
    description: "Generated by IBook",
  }
}

const page = async ({ params }) => {
  const id = (await params).id
  let book = {};

  const bookResponse = await apiClient
    .get(`/crm/books/${id}?lang=${'ar'}`)
    .catch((err) => console.log(err));

  if (bookResponse) book = bookResponse.data.data;

  // FETCH BOOK UNITS
  let bookPages = [];

  const unitsResponse = await apiClient
    .get(`/crm/books/all_pages_by_page_index/${id}?lang=${'ar'}`)
    .catch((err) => console.log(err));

  var ALL_PAGES = [];
  if (unitsResponse) {
    bookPages = unitsResponse?.data?.data;
    if (!bookPages) return;
    bookPages.forEach(async (page) => {
      const unitFound = ALL_PAGES.findIndex(
        (pa) => pa.title === page.lesson.unit.title && !pa.unit && !pa.lesson
      );
      if (unitFound <= -1) ALL_PAGES.push({ ...page.lesson.unit });

      const lessonFound = ALL_PAGES.findIndex(
        (pa) =>
          pa.title === page.lesson.title &&
          pa.unit &&
          pa.unit.id === page.lesson.unit.id
      );
      if (lessonFound <= -1) ALL_PAGES.push({ ...page.lesson });

      const pageFound = ALL_PAGES.findIndex(
        (pa) =>
          pa.title === page.title &&
          pa.lesson &&
          pa.lesson.id === page.lesson.id
      );
      if (pageFound <= -1) {
        ALL_PAGES.push({ ...page });
      }
    });
  }

  let pages = [];
  const pagesResponse = await apiClient
    .get(`/crm/books/all_pages_by_page_index/${id}?lang=ar`)
    .catch((err) => console.log(err));

  if (pagesResponse) {
    pages = pagesResponse.data.data;
  }

  let bookIndex = []

  const BOOK_INDEX = await apiClient.get(`/crm/books/get_book_index/${id}?lang=ar`).catch(err => console.log(err));

  if (BOOK_INDEX) bookIndex = BOOK_INDEX.data.data;

  let bookReferences = []

  const BOOK_REFERENCES = await apiClient.get(`/crm/books/get_book_reference/${id}?lang=ar`).catch(err => console.log(err));

  if (BOOK_REFERENCES) bookReferences = BOOK_REFERENCES.data.data.filter(item => item.reference);

  return (
    <Book
      locale={"ar"}
      book={book}
      pages={pages}
      ALL_PAGES={ALL_PAGES}
      pagesLinks={null}
      bookIndex={bookIndex}
      bookReferences={bookReferences}
    />
  )
}

export default page

// export async function getServerSideProps({ req, res, 'ar', resolvedUrl, query }) {

//   let book = {};

//   const bookResponse = await apiClient
//     .get(`/crm/books/${id}?lang=${'ar'}`)
//     .catch((err) => console.log(err));

//   if (bookResponse) book = bookResponse.data.data;

//   // FETCH BOOK UNITS
//   let bookPages = [];

//   const unitsResponse = await apiClient
//     .get(`/crm/books/all_pages_by_page_index/${id}?lang=${'ar'}`)
//     .catch((err) => console.log(err));

//   var ALL_PAGES = [];
//   if (unitsResponse) {
//     // bookPages = unitsResponse?.data?.data?.pages;
//     bookPages = unitsResponse?.data?.data;
//     // bookPages.sort((a, b) => a.id - b.id);
//     if (!bookPages) return;
//     bookPages.forEach(async (page) => {
//       const unitFound = ALL_PAGES.findIndex(
//         (pa) => pa.title === page.lesson.unit.title && !pa.unit && !pa.lesson
//       );
//       if (unitFound <= -1) ALL_PAGES.push({ ...page.lesson.unit });

//       const lessonFound = ALL_PAGES.findIndex(
//         (pa) =>
//           pa.title === page.lesson.title &&
//           pa.unit &&
//           pa.unit.id === page.lesson.unit.id
//       );
//       if (lessonFound <= -1) ALL_PAGES.push({ ...page.lesson });

//       const pageFound = ALL_PAGES.findIndex(
//         (pa) =>
//           pa.title === page.title &&
//           pa.lesson &&
//           pa.lesson.id === page.lesson.id
//       );
//       if (pageFound <= -1) {
//         ALL_PAGES.push({ ...page });
//       }
//     });
//   }

//   // FETCH ALL PAGES
//   let pages = [];
//   let pagesLinks = {};
//   let pagesMeta = {};

//   const pagesResponse = await apiClient
//     .get(`/crm/books/all_pages_by_page_index/${id}?lang=ar`)
//     .catch((err) => console.log(err));

//   if (pagesResponse) {
//     // pages = pagesResponse.data.data.pages;
//     // pagesLinks = pagesResponse.data.data.links;
//     // pagesMeta = pagesResponse.data.data.meta;

//     pages = pagesResponse.data.data;
//     // pagesLinks = pagesResponse.data.data.links;
//     // pagesMeta = pagesResponse.data.data.meta;
//   }

//   let bookIndex = []

//   const BOOK_INDEX = await apiClient.get(`/crm/books/get_book_index/${id}?lang=ar`).catch(err => console.log(err));

//   if (BOOK_INDEX) bookIndex = BOOK_INDEX.data.data;

//   let bookReferences = []

//   const BOOK_REFERENCES = await apiClient.get(`/crm/books/get_book_reference/${id}?lang=ar`).catch(err => console.log(err));

//   if (BOOK_REFERENCES) bookReferences = BOOK_REFERENCES.data.data.filter(item => item.reference);

//   return {
//     props: {
//       ...(await serverSideTranslations('ar', ["common"])),
//       'ar',
//       book,
//       pages,
//       pagesLinks,
//       pagesMeta,
//       ALL_PAGES,
//       bookIndex,
//       bookReferences
//     },
//   };
// }